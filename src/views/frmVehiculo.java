/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import classes.clsCarro;
import classes.clsInformeVehiculoColor;
import classes.clsVehiculo;
import controladores.ctlVehiculos;
import java.awt.BorderLayout;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.LinkedList;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFFont;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.FillPatternType;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author CARLOS CASTAÑEDA
 */
public class frmVehiculo extends javax.swing.JFrame {

    
    LinkedList<clsCarro> carros; //Declarar variable
    ctlVehiculos controlador;
    
    
    /**
     * Creates new form frmVehiculo
     */
    public frmVehiculo() {
        initComponents();
        //Enlazar la capa controlador
        controlador=new ctlVehiculos();
        carros = new LinkedList<>(); //Asinar valor inicial (Lista vacía)
        //Antes se colocaban algunos registros iniciales, pero ya los registros serán consultados en BD
//        carros.add(new clsCarro(false, "001", "Chevrolet", 4, "Azul", 24));
//        carros.add(new clsCarro(true, "002", "Mazda", 6, "Verde", 35));
//        carros.add(new clsCarro(false, "003", "Hyundai", 8, "Amarillo", 46));
        mostrarListadoVehiculos();
    }
    
    private void refrescarInformeCarrosColor(){
        //Crear el conjunto de datos como lo entiende el gráfico
        DefaultPieDataset dataset = new DefaultPieDataset();
        //Consultar los datos desde la BD
        LinkedList<clsInformeVehiculoColor> informes = controlador.informeVehiculosColor();
        //Agregar datos a nuestro conjunto de datos (Desde la BD)
        for (clsInformeVehiculoColor informe : informes) {
            dataset.setValue(informe.getColor(), informe.getCantidad());
        }
        
        //Agregar datos aleatorios a nuestro conjunto de datos
//        for (int i = 0; i < 10; i++) {
//            int random = new Random().nextInt(50);
//            dataset.setValue("Color " + i + ": " + random, random);
//        }
        
        //Crear gráfico y asignarle el conjunto de datos
        JFreeChart chart = ChartFactory.createPieChart("Cantidad de vehiculos por color", dataset, true, true, true);
        //Crear un panel por código. Contenedor del gráfico
        ChartPanel panel = new ChartPanel(chart);
        panel.setMouseWheelEnabled(true); //Si el gráfico es muy grande, hacer scroll
        
        //Limpiar el panel gráfico antes de agregarle el panel de código
        pnlInformeVehiculosColor.removeAll();
        
        pnlInformeVehiculosColor.setLayout( new BorderLayout() );
        //Al panel que creamos por UI, agregarle el panel creado por código que contiene la gráfica
        pnlInformeVehiculosColor.add( panel ); 
        //Mostrar el componente interno del panel gráfico
        pnlInformeVehiculosColor.validate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblVehiculos = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        pnlListar = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstVehiculos = new javax.swing.JList<>();
        btnGenerarExcel = new javax.swing.JButton();
        pnlCarros = new javax.swing.JPanel();
        lblCodigoCarro = new javax.swing.JLabel();
        txtCodigoCarro = new javax.swing.JTextField();
        lblMarcaCarro = new javax.swing.JLabel();
        txtMarcaCarro = new javax.swing.JTextField();
        lblNumeroLlantasCarro = new javax.swing.JLabel();
        cbNumeroLlantasCarro = new javax.swing.JComboBox<>();
        lblColorCarro = new javax.swing.JLabel();
        txtColorCarro = new javax.swing.JTextField();
        lblCaballosFuerzaCarro = new javax.swing.JLabel();
        txtCaballosFuerzaCarro = new javax.swing.JTextField();
        cboxAutomaticoCarro = new javax.swing.JCheckBox();
        btnCrearCarro = new javax.swing.JButton();
        btnConsultarCarro = new javax.swing.JButton();
        btnActualizarCarro = new javax.swing.JButton();
        btnEliminarCarro = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtIdVehiculo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIdCarro = new javax.swing.JTextField();
        pnlCamiones = new javax.swing.JPanel();
        pnlInformeVehiculosColor = new javax.swing.JPanel();
        pnlVehiculosAutomaticos = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        lblVehiculos.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        lblVehiculos.setText("Vehiculos");

        lstVehiculos.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstVehiculos);

        btnGenerarExcel.setText("Generar reporte excel");
        btnGenerarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlListarLayout = new javax.swing.GroupLayout(pnlListar);
        pnlListar.setLayout(pnlListarLayout);
        pnlListarLayout.setHorizontalGroup(
            pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 679, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlListarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnGenerarExcel)
                .addGap(276, 276, 276))
        );
        pnlListarLayout.setVerticalGroup(
            pnlListarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlListarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnGenerarExcel)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Listar", pnlListar);

        lblCodigoCarro.setText("Codigo: ");

        txtCodigoCarro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoCarroKeyReleased(evt);
            }
        });

        lblMarcaCarro.setText("Marca:");

        txtMarcaCarro.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        lblNumeroLlantasCarro.setText("# Llantas: ");

        cbNumeroLlantasCarro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2", "4", "6", "8", "10" }));

        lblColorCarro.setText("Color:");

        lblCaballosFuerzaCarro.setText("Caballos de fuerza:");

        cboxAutomaticoCarro.setText("¿Automático?");

        btnCrearCarro.setText("Crear");
        btnCrearCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearCarroActionPerformed(evt);
            }
        });

        btnConsultarCarro.setText("Consultar");
        btnConsultarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarCarroActionPerformed(evt);
            }
        });

        btnActualizarCarro.setText("Actualizar");
        btnActualizarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCarroActionPerformed(evt);
            }
        });

        btnEliminarCarro.setText("Eliminar");
        btnEliminarCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCarroActionPerformed(evt);
            }
        });

        jLabel1.setText("Id Vehiculo:");

        txtIdVehiculo.setEditable(false);

        jLabel2.setText("Id Carro:");

        txtIdCarro.setEditable(false);

        javax.swing.GroupLayout pnlCarrosLayout = new javax.swing.GroupLayout(pnlCarros);
        pnlCarros.setLayout(pnlCarrosLayout);
        pnlCarrosLayout.setHorizontalGroup(
            pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCarrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlCarrosLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdVehiculo))
                    .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(pnlCarrosLayout.createSequentialGroup()
                            .addComponent(lblCodigoCarro)
                            .addGap(18, 18, 18)
                            .addComponent(txtCodigoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnlCarrosLayout.createSequentialGroup()
                            .addComponent(lblNumeroLlantasCarro)
                            .addGap(18, 18, 18)
                            .addComponent(cbNumeroLlantasCarro, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlCarrosLayout.createSequentialGroup()
                        .addComponent(lblCaballosFuerzaCarro)
                        .addGap(18, 18, 18)
                        .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlCarrosLayout.createSequentialGroup()
                                .addComponent(btnCrearCarro)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnConsultarCarro))
                            .addComponent(txtCaballosFuerzaCarro))))
                .addGap(18, 18, 18)
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCarrosLayout.createSequentialGroup()
                        .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMarcaCarro)
                            .addComponent(lblColorCarro))
                        .addGap(18, 18, 18)
                        .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtColorCarro)
                            .addComponent(txtMarcaCarro)))
                    .addGroup(pnlCarrosLayout.createSequentialGroup()
                        .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxAutomaticoCarro)
                            .addGroup(pnlCarrosLayout.createSequentialGroup()
                                .addComponent(btnActualizarCarro)
                                .addGap(18, 18, 18)
                                .addComponent(btnEliminarCarro)))
                        .addGap(0, 109, Short.MAX_VALUE))
                    .addGroup(pnlCarrosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdCarro)))
                .addContainerGap())
        );
        pnlCarrosLayout.setVerticalGroup(
            pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCarrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoCarro)
                    .addComponent(txtCodigoCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMarcaCarro)
                    .addComponent(txtMarcaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroLlantasCarro)
                    .addComponent(cbNumeroLlantasCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColorCarro)
                    .addComponent(txtColorCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCaballosFuerzaCarro)
                    .addComponent(txtCaballosFuerzaCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboxAutomaticoCarro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtIdVehiculo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdCarro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(pnlCarrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCrearCarro)
                    .addComponent(btnConsultarCarro)
                    .addComponent(btnActualizarCarro)
                    .addComponent(btnEliminarCarro))
                .addGap(85, 85, 85))
        );

        jTabbedPane2.addTab("Carros", pnlCarros);

        javax.swing.GroupLayout pnlCamionesLayout = new javax.swing.GroupLayout(pnlCamiones);
        pnlCamiones.setLayout(pnlCamionesLayout);
        pnlCamionesLayout.setHorizontalGroup(
            pnlCamionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 575, Short.MAX_VALUE)
        );
        pnlCamionesLayout.setVerticalGroup(
            pnlCamionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 303, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Camiones", pnlCamiones);

        javax.swing.GroupLayout pnlInformeVehiculosColorLayout = new javax.swing.GroupLayout(pnlInformeVehiculosColor);
        pnlInformeVehiculosColor.setLayout(pnlInformeVehiculosColorLayout);
        pnlInformeVehiculosColorLayout.setHorizontalGroup(
            pnlInformeVehiculosColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
        pnlInformeVehiculosColorLayout.setVerticalGroup(
            pnlInformeVehiculosColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Gráfico vehiculos por color", pnlInformeVehiculosColor);

        javax.swing.GroupLayout pnlVehiculosAutomaticosLayout = new javax.swing.GroupLayout(pnlVehiculosAutomaticos);
        pnlVehiculosAutomaticos.setLayout(pnlVehiculosAutomaticosLayout);
        pnlVehiculosAutomaticosLayout.setHorizontalGroup(
            pnlVehiculosAutomaticosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
        pnlVehiculosAutomaticosLayout.setVerticalGroup(
            pnlVehiculosAutomaticosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 338, Short.MAX_VALUE)
        );

        jTabbedPane2.addTab("Gráfico vehiculos automaticos", pnlVehiculosAutomaticos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(234, 234, 234)
                .addComponent(lblVehiculos)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblVehiculos)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane2)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoCarroKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoCarroKeyReleased
        
        System.out.println(evt.getKeyCode()); //Obtener código ASCII de la tecla presionada
        
        System.out.println("Código: " + txtCodigoCarro.getText()); //Mostrar texto del contenido del cajón de texto
        
    }//GEN-LAST:event_txtCodigoCarroKeyReleased

    private void btnCrearCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearCarroActionPerformed
        try {
            //Intente hacer este código
            String codigo = txtCodigoCarro.getText();
            String marca = txtMarcaCarro.getText();
            int numeroLlantas = Integer.parseInt( cbNumeroLlantasCarro.getSelectedItem().toString() );
            String color = txtColorCarro.getText();
            int caballosFuerza = Integer.parseInt( txtCaballosFuerzaCarro.getText() );
            boolean automatico = cboxAutomaticoCarro.isSelected();

            //.equals se comporta igual que el operador relacional ==. En java es mejor usar .equals
            if( codigo.equals("") || marca.equals("") || color.equals("")  ){
                JOptionPane.showMessageDialog(pnlCarros, "Todos los campos del formulario son obligatorios");
            } else {
                //Si la información está correcta, crear un nuevo objeto
                //Crear un objeto de la clase clsCarro (Los id's se colocan en 0 porque serán colocados por la BD cuando se registren)
                clsCarro carro_nuevo = new clsCarro(0, automatico, 0, codigo, marca, numeroLlantas, color, caballosFuerza);
                //Mostrar los datos en consola
                System.out.println("------------------");
                System.out.println("Código: " + carro_nuevo.getCodigo());
                System.out.println("Marca: " + carro_nuevo.getMarca());
                System.out.println("# Llantas: " + carro_nuevo.getNumeroLlantas());
                System.out.println("Color: " + carro_nuevo.getColor());
                System.out.println("Caballos de fuerza: " + carro_nuevo.getCaballosDeFuerza());
                System.out.println("Automático: " + carro_nuevo.isAutomatico());
                
                //Añadir el nuevo carro al listado de carros
                //carros.add(carro_nuevo); //Ya no es necesario tener un listado de carros, se almacena directamente en la BD
                //Ejecutar el método crear del controlador
                controlador.crearVehiculo(carro_nuevo);
                mostrarListadoVehiculos();
                limpiarFormularioCarros();
                JOptionPane.showMessageDialog(pnlCarros, "El carro fue creado exitosamente");
            }
            
        } catch (NumberFormatException e) {
            //Si algo sale mal con el código de arriba, ejecute este código
            JOptionPane.showMessageDialog(pnlCarros, "El campo \"Caballos de fuerza\" debe ser numérico");
        }
    }//GEN-LAST:event_btnCrearCarroActionPerformed

    private void btnConsultarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarCarroActionPerformed
        //Capturar el código que está escrito
        String codigoBuscado = txtCodigoCarro.getText();
        if(codigoBuscado.equals("")){
            JOptionPane.showMessageDialog(pnlCarros, "Para consultar debe diligenciar el campo código");
        } else {
            //Buscar el código ingresado por la persona en nuestro listado de carros
//            boolean encontrado = false;
            
            //Consultar un carro - Controlador
            clsCarro carro = (clsCarro) controlador.obtenerVehiculo(codigoBuscado, "Carro");
            
            if(carro == null){
                //No encontró el carro en la Base de datos
                limpiarFormularioCarros();
                JOptionPane.showMessageDialog(pnlCarros, "El código " + codigoBuscado + " no se encuentra registrado");
            } else {
                //SI se encontró el registro :D
                txtCodigoCarro.setText(carro.getCodigo());
                txtMarcaCarro.setText(carro.getMarca());
                txtColorCarro.setText(carro.getColor());
                txtCaballosFuerzaCarro.setText(carro.getCaballosDeFuerza() + ""); //De (int) a (String)

                cbNumeroLlantasCarro.setSelectedItem(carro.getNumeroLlantas() + "");
                cboxAutomaticoCarro.setSelected( carro.isAutomatico() );
                
                //Modificar los campos de ID
                txtIdVehiculo.setText(carro.getIdVehiculo()+""); //De (int) a (String)
                txtIdCarro.setText(carro.getIdCarro()+""); //De (int) a (String)
            }
            
            //Esta era la manera anterior en la que trabajabamos antes de las BD
            //Buscabamos los datos en la lista que teniamos.
//            for (clsCarro carro : carros) {
//                if(carro.getCodigo().equals(codigoBuscado) ){
//                    //¡LO ENCONTRÉ!
//                    txtCodigoCarro.setText(carro.getCodigo());
//                    txtMarcaCarro.setText(carro.getMarca());
//                    txtColorCarro.setText(carro.getColor());
//                    txtCaballosFuerzaCarro.setText(carro.getCaballosDeFuerza() + ""); //De (int) a (String)
//                    
//                    cbNumeroLlantasCarro.setSelectedItem(carro.getNumeroLlantas() + "");
//                    cboxAutomaticoCarro.setSelected( carro.isAutomatico() );
//                    encontrado = true;
//                    break;
//                }
//            }
//            
//            if( !encontrado ){
//                JOptionPane.showMessageDialog(pnlCarros, "El código " + codigoBuscado + " no se encuentra registrado");
//                limpiarFormularioCarros();
//            }
            
        }
    }//GEN-LAST:event_btnConsultarCarroActionPerformed

    private void btnActualizarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCarroActionPerformed
        //Capturar el código que está escrito
        String idVehiculo = txtIdVehiculo.getText();
        String idCarro = txtIdCarro.getText();
        if(idVehiculo.equals("") || idCarro.equals("")){
            JOptionPane.showMessageDialog(pnlCarros, "Para actualizar un registro, primero debe consultarlo");
        } else {
            int idVehiculoInt = Integer.parseInt(idVehiculo);
            int idCarroInt = Integer.parseInt(idCarro);
            String codigo = txtCodigoCarro.getText();
            String marca = txtMarcaCarro.getText();
            int numeroLlantas = Integer.parseInt( cbNumeroLlantasCarro.getSelectedItem().toString() );
            String color = txtColorCarro.getText();
            int caballosFuerza = Integer.parseInt( txtCaballosFuerzaCarro.getText() );
            boolean automatico = cboxAutomaticoCarro.isSelected();
            //Crear nuevo objeto con los datos actualizados
            clsCarro carro_nuevo = new clsCarro(idCarroInt,automatico, idVehiculoInt,codigo, marca, numeroLlantas, color, caballosFuerza);
            
            //Actualizar carro - Controlador
            if ( controlador.actualizarVehiculo(carro_nuevo)){
                mostrarListadoVehiculos();
                limpiarFormularioCarros();
                JOptionPane.showMessageDialog(pnlCarros, "Carro actualizado con éxito");
            } else {
                JOptionPane.showMessageDialog(pnlCarros, "Ocurrió un error al actualizar, por favor verifique los datos");
            }
            
            //Buscar el código ingresado por la persona en nuestro listado de carros
//            boolean encontrado = false;
//            int index = 0;
//            for (clsCarro carro : carros) {
//                if(carro.getCodigo().equals(codigoBuscado) ){
//                    //¡LO ENCONTRÉ!
//                    String codigo = txtCodigoCarro.getText();
//                    String marca = txtMarcaCarro.getText();
//                    int numeroLlantas = Integer.parseInt( cbNumeroLlantasCarro.getSelectedItem().toString() );
//                    String color = txtColorCarro.getText();
//                    int caballosFuerza = Integer.parseInt( txtCaballosFuerzaCarro.getText() );
//                    boolean automatico = cboxAutomaticoCarro.isSelected();
//                    
////                    clsCarro carro_nuevo = new clsCarro(automatico, codigo, marca, numeroLlantas, color, caballosFuerza);
////                    
////                    carros.set(index, carro_nuevo);
////                    mostrarListadoVehiculos();
////                    limpiarFormularioCarros();
////                    //Actualizar carro - Controlador
////                    controlador.actualizarVehiculo(codigoBuscado, carro_nuevo);
////                    JOptionPane.showMessageDialog(pnlCarros, "Carro actualizado con éxito");
////                    
////                    encontrado = true;
////                    break;
//                }
//                index++;
//            }
//            
//            if( !encontrado ){
//                JOptionPane.showMessageDialog(pnlCarros, "El código " + codigoBuscado + " no se encuentra registrado");
//                limpiarFormularioCarros();
//            }
            
        }
    }//GEN-LAST:event_btnActualizarCarroActionPerformed

    private void btnEliminarCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCarroActionPerformed
        //Capturar el código que está escrito
        String idVehiculo = txtIdVehiculo.getText();
        String idCarro = txtIdCarro.getText();
        if(idVehiculo.equals("") || idCarro.equals("")){
            JOptionPane.showMessageDialog(pnlCarros, "Para eliminar un registro, primero debe consultarlo");
        } else {
            int idVehiculoInt = Integer.parseInt(idVehiculo);
            int idCarroInt = Integer.parseInt(idCarro);
            String codigo = txtCodigoCarro.getText();
            String marca = txtMarcaCarro.getText();
            int numeroLlantas = Integer.parseInt( cbNumeroLlantasCarro.getSelectedItem().toString() );
            String color = txtColorCarro.getText();
            int caballosFuerza = Integer.parseInt( txtCaballosFuerzaCarro.getText() );
            boolean automatico = cboxAutomaticoCarro.isSelected();
            //Crear nuevo objeto con los datos actuales del formulario (Incluye los ID's)
            clsCarro carro_nuevo = new clsCarro(idCarroInt,automatico, idVehiculoInt,codigo, marca, numeroLlantas, color, caballosFuerza);
            //¿Está seguro que desea eliminar?
            int respuesta = JOptionPane.showConfirmDialog(pnlCarros, "¿Está seguro que desea eliminar el registro?");
            if( respuesta == JOptionPane.OK_OPTION ){
                //Eliminar carro - Controlador
                if ( controlador.eliminarVehiculo(carro_nuevo)){
                    mostrarListadoVehiculos();
                    limpiarFormularioCarros();
                    JOptionPane.showMessageDialog(pnlCarros, "Carro eliminado con éxito");
                } else {
                    JOptionPane.showMessageDialog(pnlCarros, "Ocurrió un error al eliminar, por favor verifique los datos");
                }
            }
            
            
            //Buscar el código ingresado por la persona en nuestro listado de carros
//            boolean encontrado = false;
//            
//            for (clsCarro carro : carros) {
//                if(carro.getCodigo().equals(codigoBuscado) ){
//                    //¿Está seguro que desea eliminar?
//                    int respuesta = JOptionPane.showConfirmDialog(pnlCarros, "¿Está seguro que desea eliminar el registro?");
//                    if( respuesta == JOptionPane.OK_OPTION ){
//                        //Si el usuario contesta que si, ELIMINAR
//                        carros.remove(carro);
//                        mostrarListadoVehiculos();
//                        limpiarFormularioCarros();
//                        //Eliminar el registro - CONTROLADOR
//                        controlador.eliminarVehiculo(carro);
//                        JOptionPane.showMessageDialog(pnlCarros, "Registro eliminado");
//                    }
//                    encontrado = true;
//                    break;
//                }
//            }
//            
//            if( !encontrado ){
//                JOptionPane.showMessageDialog(pnlCarros, "El código " + codigoBuscado + " no se encuentra registrado");
//                limpiarFormularioCarros();
//            }
            
        }
    }//GEN-LAST:event_btnEliminarCarroActionPerformed

    private void btnGenerarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarExcelActionPerformed
        //1. Crear libro
        HSSFWorkbook libro = new HSSFWorkbook();
        
        //2. Crear Hoja(s) en el libro
        HSSFSheet hoja = libro.createSheet();
        libro.setSheetName(0, "Vehiculos"); //Asignar un nombre a la hoja en ls posición 0
        
        //2.9 Crear estilos para las celdas (Opcional)
        CellStyle estiloCabecera = libro.createCellStyle();
        estiloCabecera.setFillForegroundColor(IndexedColors.LIGHT_BLUE.getIndex()); //Modificar color de fondo de la celda
        estiloCabecera.setFillPattern(FillPatternType.SOLID_FOREGROUND); // Hacer que el fondo sea sólido
        
        HSSFFont fuente = libro.createFont();
        fuente.setBold(true); //Colocar la fuente en negrita
        estiloCabecera.setFont(fuente);
        
        String[] cabeceras = new String[]{"Id", "Código", "Marca", "Cantidad Llantas", "Color", "Caballos de Fuerza", "¿Automático?"};
        
        //3. Crear filas en las hojas
        HSSFRow cabecera = hoja.createRow(0);
        
        for (int i = 0; i < cabeceras.length; i++) {
            HSSFCell celdaCabecera = cabecera.createCell(i);
            celdaCabecera.setCellValue( cabeceras[i] );
            celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
        }
//        HSSFCell celdaCabecera = cabecera.createCell(0);
//        celdaCabecera.setCellValue("Id");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(1);
//        celdaCabecera.setCellValue("Código");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(2);
//        celdaCabecera.setCellValue("Marca");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(3);
//        celdaCabecera.setCellValue("Cantidad Llantas");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(4);
//        celdaCabecera.setCellValue("Color");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(5);
//        celdaCabecera.setCellValue("Caballos de Fuerza");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
//        celdaCabecera = cabecera.createCell(6);
//        celdaCabecera.setCellValue("¿Automático?");
//        celdaCabecera.setCellStyle(estiloCabecera); //Asignar estilos a la celda
        
        for (int i = 0; i < carros.size(); i++) {
            //3. Crear filas en las hojas
            HSSFRow fila = hoja.createRow(i + 1);

            //4. Crear celdas en las filas
            HSSFCell celda = fila.createCell(0);
            celda.setCellValue(carros.get(i).getIdCarro());
            celda = fila.createCell(1);
            celda.setCellValue(carros.get(i).getCodigo());
            celda = fila.createCell(2);
            celda.setCellValue(carros.get(i).getMarca());
            celda = fila.createCell(3);
            celda.setCellValue(carros.get(i).getNumeroLlantas());
            celda = fila.createCell(4);
            celda.setCellValue(carros.get(i).getColor());
            celda = fila.createCell(5);
            celda.setCellValue(carros.get(i).getCaballosDeFuerza());
            celda = fila.createCell(6);
            celda.setCellValue(carros.get(i).isAutomatico());
        }
        
        try {
            //5. Escribir el excel en el Disco Duro
            //Crear fecha + Modificar en el nombre del archivo para obtener cada uno de los datos de la fecha
            LocalDateTime fechaConHora = LocalDateTime.now(); // Crear una variable con la fecha y hora actuales
            DateTimeFormatter esDateFormat = DateTimeFormatter.ofPattern("dd_MM_yyyy_hh_mm_ss"); //Formatear la fecha a nuestra necesidad
            //System.out.println("Formato español (manual): " + fechaConHora.format(esDateFormat)); //Ver la fecha y hora formateadas en consola
            FileOutputStream archivo = new FileOutputStream("reports/reporte" + fechaConHora.format(esDateFormat) + ".xls"); //Agregar la fecha con formato al archivo
            libro.write(archivo); //Escribir el libro creado en un archivo
            archivo.close(); //Buena práctica
            JOptionPane.showMessageDialog(pnlListar, "Excel generado exitosamente");
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(pnlListar, "Error generando excel");
            System.out.println("Error leyendo el archivo: " + ex.getMessage());
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(pnlListar, "Error generando excel");
            System.out.println("Error escribiendo en el archivo: " + ex.getMessage());
        }
    }//GEN-LAST:event_btnGenerarExcelActionPerformed
    
    public void mostrarListadoVehiculos(){
        carros = controlador.listarCarros();
        DefaultListModel model = new DefaultListModel();
        int index =0;
        for (clsCarro carro : carros) {
            model.add(index, carro);
            index++;
        }
        lstVehiculos.setModel(model);
        //lstVehiculos Agregar Elementos
        
        refrescarInformeCarrosColor();
    }
    
    public void limpiarFormularioCarros(){
        txtCodigoCarro.setText(""); //Limpiar cajones de texto
        txtMarcaCarro.setText("");
        txtColorCarro.setText("");
        txtCaballosFuerzaCarro.setText("");
        
        cbNumeroLlantasCarro.setSelectedIndex(0);
        cboxAutomaticoCarro.setSelected(false);
        
        txtIdCarro.setText("");
        txtIdVehiculo.setText("");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmVehiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarCarro;
    private javax.swing.JButton btnConsultarCarro;
    private javax.swing.JButton btnCrearCarro;
    private javax.swing.JButton btnEliminarCarro;
    private javax.swing.JButton btnGenerarExcel;
    private javax.swing.JComboBox<String> cbNumeroLlantasCarro;
    private javax.swing.JCheckBox cboxAutomaticoCarro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblCaballosFuerzaCarro;
    private javax.swing.JLabel lblCodigoCarro;
    private javax.swing.JLabel lblColorCarro;
    private javax.swing.JLabel lblMarcaCarro;
    private javax.swing.JLabel lblNumeroLlantasCarro;
    private javax.swing.JLabel lblVehiculos;
    private javax.swing.JList<String> lstVehiculos;
    private javax.swing.JPanel pnlCamiones;
    private javax.swing.JPanel pnlCarros;
    private javax.swing.JPanel pnlInformeVehiculosColor;
    private javax.swing.JPanel pnlListar;
    private javax.swing.JPanel pnlVehiculosAutomaticos;
    private javax.swing.JTextField txtCaballosFuerzaCarro;
    private javax.swing.JTextField txtCodigoCarro;
    private javax.swing.JTextField txtColorCarro;
    private javax.swing.JTextField txtIdCarro;
    private javax.swing.JTextField txtIdVehiculo;
    private javax.swing.JTextField txtMarcaCarro;
    // End of variables declaration//GEN-END:variables
}
